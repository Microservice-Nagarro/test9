pr: none
trigger:
  batch: false
  branches:
    include:
    - develop
    - release/*

parameters:
- name: DeployConfigMapInt
  displayName: "Deploy Config Map to Int"
  type: boolean
  default: false
- name: DeployConfigMapStg
  displayName: "Deploy Config Map to Stg"
  type: boolean
  default: false
- name: DeployConfigMapPrd
  displayName: "Deploy Config Map to Prd"
  type: boolean
  default: false
- name: DeployConfigMapDR
  displayName: "Deploy Config Map to DR"
  type: boolean
  default: false

resources:
  repositories:
  - repository: BHF.Microservices
    type: github
    endpoint: github.com_wcheung-bhf
    name: BHFDigital/BHF.Microservices
    ref: main
    
variables:
- name: devAzureSubscription
  value: 'BHF Shared_NonProd (e014a007-5eec-4a79-9925-752b25ea2aa6)'
- name: stgAzureSubscription
  value: 'BHF-Staging'
- name: prdAzureSubscription
  value: 'Microsoft Azure (cdecba91-6f60-4b18-b781-037f8d369e1f)'
- name: containerRegistry
  value: 'bhfcontainerregistry'
- name: containerRegistryConnection
  value: 'BHF Container Registry Connection'
- name: repository
  value: 'BHF.MS.Template' # Change me - repository name
- name: dockerPath
  value: 'code/BHF.MS.test9' # Change me - relative path to the folder containing Dockerfile

stages:
  - stage: 'Build_and_Publish_Microservice'
    displayName: 'Build and Publish Microservice'
    jobs:
    - job: 'Build_Microservice'
      displayName: 'Build Microservice'
      steps:
        - template: /devops/templates/build/configure-checkout.yml@BHF.Microservices
          parameters:
            forceShallowFetch: true
        - template: /devops/templates/build/build-microservice.yml@BHF.Microservices
          parameters:
            containerRegistryConnection: '$(containerRegistryConnection)'
            repository:                  '$(repository)'
            dockerPath:                  '$(dockerPath)'
            publish:                     'Y'
            buildContext:                $(Build.Repository.LocalPath)/$(repository)
            
  - stage: Deploy_To_Integration
    displayName: 'Deploy to Integration'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
    jobs:
      - deployment: 'Deploy_to_Kubernetes'
        displayName: 'Deploy to Kubernetes'
        environment: 'MS-integration'
        variables:
          - name:  ContainerReg
            value: $(containerRegistry)
          - name:  BuildRef
            value: '$(build.buildnumber)'          
          - name:  KeyVaultUri
            value: 'https://uks-int-ms-micro-kv.vault.azure.net/' # Change me - Integration microservice KV instance
          - name:  ManagedIdentityClientId
            value: '5f8f13d5-ae74-4f73-87ea-37d42e04a8ef'
        strategy:
          runOnce:
            deploy:
              steps:
              - template: /devops/templates/build/configure-checkout.yml@BHF.Microservices
                parameters:
                  forceShallowFetch: true
              - template: /devops/templates/deploy/deploy-kubernetes.yml@BHF.Microservices
                parameters:
                  azureSubscription:  $(devAzureSubscription)
                  azureResourceGroup: 'uks-int-microservices-rsg'
                  kubernetesCluster:  'uks-int-ms-aks'
                  DeployConfigMap:    '${{parameters.DeployConfigMapInt}}'

  - stage: Deploy_To_Staging
    displayName: 'Deploy to Staging'
    dependsOn: Build_and_Publish_Microservice
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
    jobs:
      - deployment: 'Deploy_to_Kubernetes'
        displayName: 'Deploy to Kubernetes'
        environment: 'MS-staging'
        variables:
          - name:  ContainerReg
            value: $(containerRegistry)
          - name:  BuildRef
            value: '$(build.buildnumber)'
          - name:  KeyVaultUri
            value: 'https://uks-stg-ms-micro-kv.vault.azure.net/' # Change me - Staging microservice KV instance
          - name:  ManagedIdentityClientId
            value: '187f65d5-d6ea-4b23-a592-13d99c55a7d5'
        strategy:
          runOnce:
            deploy:
              steps:
              - template: /devops/templates/build/configure-checkout.yml@BHF.Microservices
                parameters:
                  forceShallowFetch: true
              - template: /devops/templates/deploy/deploy-kubernetes.yml@BHF.Microservices
                parameters:
                  azureSubscription:  $(stgAzureSubscription)
                  azureResourceGroup: 'uks-stg-microservices-rsg'
                  kubernetesCluster:  'uks-stg-ms-aks'
                  DeployConfigMap:    '${{parameters.DeployConfigMapStg}}'

  - stage: Deploy_To_Production
    displayName: 'Deploy to Production'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
    jobs:
      - deployment: 'Deploy_to_Kubernetes'
        displayName: 'Deploy to Kubernetes'
        environment: 'MS-production'
        variables:
          - name:  ContainerReg
            value: $(containerRegistry)
          - name:  BuildRef
            value: '$(build.buildnumber)'
          - name:  KeyVaultUri
            value: 'https://uks-prd-ms-micro-kv.vault.azure.net/'  # Change me - Production microservice KV instance
          - name:  ManagedIdentityClientId
            value: '8fa2d8a8-311b-4cd4-8d0b-c21f5e423baa'
        strategy:
          runOnce:
            deploy:
              steps:
              - template: /devops/templates/build/configure-checkout.yml@BHF.Microservices
                parameters:
                  forceShallowFetch: true
              - template: /devops/templates/deploy/deploy-kubernetes.yml@BHF.Microservices
                parameters:
                  azureSubscription:  $(prdAzureSubscription)
                  azureResourceGroup: 'uks-prd-microservices-rsg'
                  kubernetesCluster:  'uks-prd-ms-aks'
                  DeployConfigMap:    '${{parameters.DeployConfigMapPrd}}'

  - stage: Deploy_To_DR
    displayName: 'Deploy to DR'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
    jobs:
      - deployment: 'Deploy_to_Kubernetes'
        displayName: 'Deploy to Kubernetes'
        environment: 'MS-dr'
        variables:
          - name:  ContainerReg
            value: $(containerRegistry)
          - name:  BuildRef
            value: '$(build.buildnumber)'
          - name:  KeyVaultUri
            value: 'https://ukw-dr-ms-micro-kv.vault.azure.net/'  # Change me - DR microservice KV instance
          - name:  ManagedIdentityClientId
            value: 'ddc80c48-3e9a-46b8-8871-70e62c9f19cc'
        strategy:
          runOnce:
            deploy:
              steps:
              - template: /devops/templates/build/configure-checkout.yml@BHF.Microservices
                parameters:
                  forceShallowFetch: true
              - template: /devops/templates/deploy/deploy-kubernetes.yml@BHF.Microservices
                parameters:
                  azureSubscription:  $(prdAzureSubscription)
                  azureResourceGroup: 'ukw-dr-microservices-rsg'
                  kubernetesCluster:  'ukw-dr-ms-aks'
                  DeployConfigMap:    '${{parameters.DeployConfigMapDR}}'

